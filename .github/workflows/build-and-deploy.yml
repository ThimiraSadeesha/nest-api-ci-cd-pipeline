name: Build and Deploy (Main)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # PR Build & Test only
  pr-build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Docker Build (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: sadeeee/nest-api-ci-cd-pipeline:pr-${{ github.event.pull_request.number }}

  # Push to Docker Hub and Deploy (Main branch only)
  build-push-deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production  # ðŸ‘ˆ ties job to the Production environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: sadeeee/nest-api-ci-cd-pipeline:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            echo "Deploying production container..."
            docker pull sadeeee/nest-api-ci-cd-pipeline:latest
            docker stop nest-api-prod || true
            docker rm nest-api-prod || true
            docker run -d \
              --restart unless-stopped \
              --name nest-api-prod \
              -p 3000:3000 \
              -e NODE_ENV=production \
              sadeeee/nest-api-ci-cd-pipeline:latest
